{"remainingRequest":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/src/views/CreateNewEvent.vue?vue&type=style&index=0&id=77c10bb0&scoped=true&lang=css&","dependencies":[{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/src/views/CreateNewEvent.vue","mtime":1644340788049},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oZWFkZXIgewogIHBhZGRpbmc6IDAuNXJlbSAwcmVtOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTYxNjE2OwogIGNvbG9yOiB3aGl0ZTsKfQouYnJlYWQtY3J1bWIgewogIG1hcmdpbjogMC41cmVtIDFyZW07Cn0KLnRpdGxlIHsKICBwYWRkaW5nOiAwLjVyZW0gMXJlbTsKICBmb250LXNpemU6IGxhcmdlOwogIG1hcmdpbi1ib3R0b206IDFyZW07Cn0KLmlucHV0LWZlaWxkIHsKICB3aWR0aDogMTAwJTsKfQoucGFzc3dvcmQtaXRlbSB7CiAgbWFyZ2luLXRvcDogMnJlbTsKfQouZm9vdGVyIHsKICB3aWR0aDogMTAwJTsKfQoKLnBhcnRpY2lwYW50LWNhcmQtc29sbyB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KCi50ZWFtLXRpdGxlLWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBtYXJnaW4tYm90dG9tOiAxcmVtOwp9Ci50ZWFtLXRpdGxlIHsKICB3aWR0aDogMTAwJTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAwLjlyZW07CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KLnRhZ3MtY29udGFpbmVyIHsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2RjZGVlMjsKICBtYXJnaW4tdG9wOiAxcmVtOwp9Cg=="},{"version":3,"sources":["CreateNewEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateNewEvent.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <Row class=\"header\"><h1>Tazkara</h1></Row>\n    <Row class=\"bread-crumb\">\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <router-link to=\"/event-provider-control-panel\">\n            Control panel\n          </router-link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>Create new event</BreadcrumbItem>\n      </Breadcrumb>\n    </Row>\n    <Row class=\"title\"><h2>New Event</h2></Row>\n    <Row>\n      <Col span=\"12\" offset=\"6\">\n        <Alert show-icon>\n          Fill these information to host a new event. The Event will be\n          processed in 8 hours.\n        </Alert>\n        <Divider orientation=\"left\">Basic Info</Divider>\n        <Form\n          ref=\"newEventForm\"\n          :model=\"formData\"\n          :rules=\"formRules\"\n          :label-width=\"130\"\n        >\n          <Alert type=\"warning\">\n            These info are to find and recommend your event. fill them as\n            detailed as possible\n          </Alert>\n          <FormItem label=\"Title\" prop=\"title\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.title\"\n              placeholder=\"Enter the event title\"\n              class=\"input-feild\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Desc\" prop=\"desc\">\n            <Input\n              v-model=\"formData.desc\"\n              type=\"textarea\"\n              :autosize=\"{ minRows: 2, maxRows: 7 }\"\n              placeholder=\"Whate is the event about...\"\n              class=\"input-feild\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Location\" prop=\"location\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.location\"\n              placeholder=\"Enter a valid location\"\n              class=\"input-feild\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Date&Time\">\n            <DatePicker\n              type=\"datetime\"\n              placeholder=\"Select date\"\n              v-model=\"formData.dateTime\"\n            ></DatePicker>\n          </FormItem>\n          <Divider orientation=\"left\">Reservation</Divider>\n          <FormItem label=\"Avialable Tickets\">\n            <Input\n              type=\"number\"\n              v-model=\"formData.allTickets\"\n              placeholder=\"number of avialable tickets\"\n              style=\"width: 45%\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"price of single ticket\">\n            <Input\n              type=\"number\"\n              v-model=\"formData.singleTicketPrice\"\n              placeholder=\"Enter the price of a single ticket\"\n              style=\"width: 45%\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Reservation duedate\">\n            <DatePicker\n              type=\"datetime\"\n              placeholder=\"Select date\"\n              v-model=\"formData.lastReservationDateTime\"\n            ></DatePicker>\n          </FormItem>\n          <Divider orientation=\"left\">Classificatoin</Divider>\n          <FormItem label=\"Main category\" prop=\"mainCategory\">\n            <Select\n              placeholder=\"select\"\n              v-model=\"formData.mainCategory\"\n              @on-change=\"updateSubCategories\"\n            >\n              <Option\n                v-for=\"mainCategory in mainCategories\"\n                :key=\"mainCategory\"\n                :value=\"mainCategory\"\n              >\n                {{ mainCategory }}\n              </Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"Sub category\" prop=\"subCategory\">\n            <Select\n              placeholder=\"select\"\n              not-found-text=\"select main category first\"\n              v-model=\"formData.subCategory\"\n              @on-change=\"setupParticipantsArea\"\n            >\n              <Option\n                v-for=\"subCategory in subCategories\"\n                :key=\"subCategory\"\n                :value=\"subCategory\"\n              >\n                {{ subCategory }}\n              </Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"Tags\">\n            <Input\n              type=\"text\"\n              v-model=\"currTag\"\n              v-on:keyup.native.enter=\"addTag\"\n            ></Input>\n            <Tag\n              v-for=\"tag in formData.tags\"\n              :key=\"tag\"\n              closable\n              @on-close=\"deleteTag(tag)\"\n              >{{ tag }}</Tag\n            >\n          </FormItem>\n          <Divider orientation=\"left\">Participants</Divider>\n          <Alert type=\"error\" v-show=\"showMissingNamesMsg\">\n            Participants names cannot be empty\n          </Alert>\n          <div v-show=\"showParticipantsArea\">\n            <div v-if=\"soloParticipant\">\n              <div\n                v-for=\"(participant, index) in participants\"\n                :key=\"index\"\n                class=\"participant-card-solo\"\n              >\n                <FormItem label=\"name\" prop=\"participantName\">\n                  <Input\n                    type=\"text\"\n                    v-model=\"participant.name\"\n                    placeholder=\"name\"\n                  ></Input>\n                </FormItem>\n\n                <FormItem label=\"role\">\n                  <Input\n                    type=\"text\"\n                    v-model=\"participant.role\"\n                    placeholder=\"ex. Organizer\"\n                  ></Input>\n                </FormItem>\n                <Button\n                  type=\"error\"\n                  shape=\"circle\"\n                  icon=\"md-trash\"\n                  style=\"margin-left: 1rem\"\n                  @click=\"deleteParticipant_solo(index)\"\n                ></Button>\n              </div>\n              <FormItem align=\"right\">\n                <Button type=\"primary\" @click=\"addSoloParticipant()\"\n                  >Add participant\n                </Button>\n              </FormItem>\n            </div>\n            <div v-if=\"!soloParticipant\">\n              <Row>\n                <Col span=\"11\" class=\"team-title-container\">\n                  <div class=\"team-title\" style=\"padding-left: 3rem\">\n                    Team 1\n                  </div>\n                </Col>\n                <Col span=\"11\" class=\"team-title-container\" offset=\"2\">\n                  <div class=\"team-title\">Team 2</div>\n                </Col>\n              </Row>\n              <div v-for=\"(opponents, index) in participants\" :key=\"index\">\n                <Row>\n                  <Col span=\"11\">\n                    <FormItem label=\"name\" prop=\"participantName\">\n                      <Input\n                        type=\"text\"\n                        v-model=\"opponents.team_1.name\"\n                        placeholder=\"name\"\n                      ></Input>\n                    </FormItem>\n                  </Col>\n                  <Col span=\"11\">\n                    <FormItem label=\"name\" prop=\"participantName\">\n                      <Input\n                        type=\"text\"\n                        v-model=\"opponents.team_2.name\"\n                        placeholder=\"name\"\n                      ></Input>\n                    </FormItem>\n                  </Col>\n                  <Col span=\"2\" v-show=\"canAddExtrapPartiipants\">\n                    <Button\n                      type=\"error\"\n                      shape=\"circle\"\n                      icon=\"md-trash\"\n                      style=\"margin-left: 1rem\"\n                      @click=\"deleteParticipant(index)\"\n                    ></Button>\n                  </Col>\n                </Row>\n              </div>\n              <FormItem align=\"right\" v-show=\"canAddExtrapPartiipants\">\n                <Button type=\"primary\" @click=\"addMultiParticipant()\"\n                  >Add opppnents\n                </Button>\n              </FormItem>\n            </div>\n          </div>\n          <FormItem align=\"center\" class=\"footer\">\n            <Button type=\"primary\" @click=\"handleSubmit()\">Submit</Button>\n            <Button @click=\"handleReset()\" style=\"margin-left: 8px\"\n              >Reset</Button\n            >\n          </FormItem>\n        </Form>\n      </Col>\n    </Row>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src \"@/components/HelloWorld.vue\"\nimport axios from \"axios\";\n\nexport default {\n  name: \"JoinUs\",\n  components: {},\n  data() {\n    return {\n      mainCategories: [\"Entertainment\", \"Sports\", \"Education\"],\n      subCategories: [],\n      participants: [],\n      soloParticipant: false,\n      showMissingNamesMsg: false,\n      canAddExtrapPartiipants: true,\n      showParticipantsArea: false,\n      currTag: \"\",\n      formData: {\n        title: \"\",\n        desc: \"\",\n        location: \"\",\n        dateTime: \"\",\n        allTickets: \"\",\n        singleTicketPrice: \"\",\n        lastReservationDateTime: \"\",\n        mainCategory: null,\n        subCategory: null,\n        tags: [],\n      },\n      formRules: {\n        title: [\n          { required: true, message: \"Title cannot be empty\", trigger: \"blur\" },\n        ],\n        location: [\n          {\n            required: true,\n            message: \"location cannot be empty\",\n            trigger: \"blur\",\n          },\n        ],\n        desc: [\n          { required: true, message: \"Tell us who you are\", trigger: \"blur\" },\n          {\n            type: \"string\",\n            min: 50,\n            message: \"descriptoin cannot be less than 50 words\",\n            trigger: \"blur\",\n          },\n        ],\n        mainCategory: [\n          {\n            required: true,\n            message: \"main category cannot be empty\",\n            trigger: \"blur\",\n          },\n        ],\n        subCategory: [\n          {\n            required: true,\n            message: \"sub category cannot be empty\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.$refs[\"newEventForm\"].validate((valid) => {\n        if (valid) {\n          const token = localStorage.getItem(\"token\");\n          axios({\n            method: \"post\",\n            url: \"http://localhost:8888/api/v1/Events/Create\",\n            data: this.createFormData(),\n            headers: { \n              \"Content-Type\": \"multipart/form-data\",  \n              Authorization: `Bearer ${token}`,\n            },\n          })\n            .then(() => {\n              this.handleReset();\n              this.showConfirmationMsg();\n            })\n            .catch((error) => console.log(error));\n        } else {\n          this.$Message.error(\"Please enter the information!\");\n        }\n      });\n    },\n    handleReset() {\n      this.$refs[\"newEventForm\"].resetFields();\n    },\n    showConfirmationMsg() {\n      this.$Message.success({\n        content:\n          \"Your request has been submitted Successfully.Kindly check your email\",\n        duration: 20,\n        closable: true,\n      });\n    },\n    updateSubCategories() {\n      this.showParticipantsArea = false;\n      if (this.formData.mainCategory == \"Entertainment\") {\n        this.subCategories = [\"Movies\", \"Theatre\", \"Concert\", \"Standup show\"];\n      } else if (this.formData.mainCategory == \"Sports\") {\n        this.subCategories = [\"Football\", \"Tennis\", \"Basketball\", \"Volleyball\"];\n      } else if (this.formData.mainCategory == \"Education\") {\n        this.subCategories = [\"Conference\", \"Fair\"];\n      } else this.subCategories = [];\n    },\n    setupParticipantsArea() {\n      if (this.formData.subCategory == null) return;\n      this.showParticipantsArea = true;\n      this.participants.length = 0;\n      this.canAddExtrapPartiipants = true;\n      if (\n        this.formData.mainCategory == \"Entertainment\" ||\n        this.formData.mainCategory == \"Education\"\n      ) {\n        this.soloParticipant = true;\n        this.addSoloParticipant();\n      } else if (this.formData.mainCategory == \"Sports\") {\n        this.soloParticipant = false;\n        this.addMultiParticipant();\n        if (\n          this.formData.subCategory == \"Football\" ||\n          this.formData.subCategory == \"Basketball\"\n        ) {\n          this.canAddExtrapPartiipants = false;\n        }\n      }\n    },\n    createFormData() {\n      const formData = new FormData();\n      formData.append(\"ProviderName\", localStorage.getItem(\"name\"));\n      formData.append(\"Title\", this.formData.title);\n      formData.append(\"Description\", this.formData.desc);\n      formData.append(\"Location\", this.formData.location);\n      formData.append(\"DateTime\", this.formatDateTime(JSON.stringify(this.formData.dateTime)));\n      formData.append(\"AllTickets\", this.formData.allTickets);\n      formData.append(\"SingleTicketPrice\", this.formData.singleTicketPrice);\n      formData.append(\"ReservationDueDate\", this.formatDateTime(JSON.stringify(this.formData.lastReservationDateTime)));\n      formData.append(\"Category\", this.formData.mainCategory);\n      formData.append(\"SubCategory\", this.formData.subCategory);\n      formData.append(\"Participants\", this.getParticipantsList());\n      formData.append(\"Tags\", this.formData.tags);\n\n      return formData;\n    },\n    addSoloParticipant() {\n      const isValid = this.validateSoloParticipantInputs();\n      if (!isValid) {\n        this.showMissingNamesMsg = true;\n        return;\n      }\n      this.showMissingNamesMsg = false;\n      this.participants.push(this.newParticipant(1));\n    },\n    validateSoloParticipantInputs() {\n      if (this.participants.length > 0) {\n        const lastEntry = this.participants[this.participants.length - 1];\n        if (lastEntry.name.trim() == \"\") {\n          return false;\n        }\n      }\n      return true;\n    },\n    addMultiParticipant() {\n      const isValid = this.validateMultiParticipantInputs();\n      if (!isValid) {\n        this.showMissingNamesMsg = true;\n        return;\n      }\n      this.showMissingNamesMsg = false;\n      this.participants.push(this.newOpponents());\n    },\n    validateMultiParticipantInputs() {\n      if (this.participants.length > 0) {\n        const lastEntry = this.participants[this.participants.length - 1];\n        if (\n          lastEntry.team_1.name.trim() == \"\" ||\n          lastEntry.team_2.name.trim() == \"\"\n        ) {\n          return false;\n        }\n      }\n      return true;\n    },\n    deleteParticipant(index) {\n      this.participants.splice(index, 1);\n    },\n    SocialMedia(type, link) {\n      return {\n        Type: type,\n        Link: link === \"\" ? null : link,\n      };\n    },\n    newParticipant(teamId) {\n      return {\n        team: teamId,\n        name: \"\",\n        role: \"\",\n      };\n    },\n    newOpponents() {\n      return {\n        team_1: this.newParticipant(1),\n        team_2: this.newParticipant(2),\n      };\n    },\n    addTag() {\n      const tagWithNoSpaces = this.currTag.trim();\n      const doesTagAlreadyExist = this.formData.tags.includes(tagWithNoSpaces);\n      if (!doesTagAlreadyExist) {\n        this.formData.tags.push(tagWithNoSpaces);\n      }\n      this.currTag = \"\";\n    },\n    deleteTag(tag) {\n      const index = this.formData.tags.indexOf(tag);\n      this.formData.tags.splice(index, 1);\n    },\n    getParticipantsList() {\n      const result = [];\n      this.participants.forEach(participant => {\n        result.push(participant.name+\"/\"+participant.role+\"/\"+participant.team)\n      });\n      return result;\n    },\n    formatDateTime(dateTime) {\n      const mod1 = dateTime.substring(1, dateTime.lastIndexOf('.'));\n      const parts = mod1.split('T');\n      const mod2 = parts[0] + ' ' +parts[1];\n      return mod2; \n    }\n  },\n};\n</script>\n\n<style scoped>\n.header {\n  padding: 0.5rem 0rem;\n  text-align: center;\n  background-color: #161616;\n  color: white;\n}\n.bread-crumb {\n  margin: 0.5rem 1rem;\n}\n.title {\n  padding: 0.5rem 1rem;\n  font-size: large;\n  margin-bottom: 1rem;\n}\n.input-feild {\n  width: 100%;\n}\n.password-item {\n  margin-top: 2rem;\n}\n.footer {\n  width: 100%;\n}\n\n.participant-card-solo {\n  display: flex;\n  justify-content: space-between;\n}\n\n.team-title-container {\n  display: flex;\n  margin-bottom: 1rem;\n}\n.team-title {\n  width: 100%;\n  text-align: center;\n  font-size: 0.9rem;\n  font-weight: bold;\n}\n.tags-container {\n  border-radius: 4px;\n  border: 1px solid #dcdee2;\n  margin-top: 1rem;\n}\n</style>\n"]}]}