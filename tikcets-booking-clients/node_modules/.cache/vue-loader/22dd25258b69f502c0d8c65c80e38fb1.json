{"remainingRequest":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/src/views/JoinUs.vue?vue&type=template&id=7b306422&scoped=true&","dependencies":[{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/src/views/JoinUs.vue","mtime":1640805145006},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}