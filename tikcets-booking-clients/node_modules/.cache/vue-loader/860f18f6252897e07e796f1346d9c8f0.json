{"remainingRequest":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/src/views/CreateNewEvent.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/src/views/CreateNewEvent.vue","mtime":1640801226324},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oZWFkZXIgewogIHBhZGRpbmc6IDAuNXJlbSAwcmVtOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTYxNjE2OwogIGNvbG9yOiB3aGl0ZTsKfQouYnJlYWQtY3J1bWIgewogIG1hcmdpbjogMC41cmVtIDFyZW07Cn0KLnRpdGxlIHsKICBwYWRkaW5nOiAwLjVyZW0gMXJlbTsKICBmb250LXNpemU6IGxhcmdlOwogIG1hcmdpbi1ib3R0b206IDFyZW07Cn0KLmlucHV0LWZlaWxkIHsKICB3aWR0aDogMTAwJTsKfQoucGFzc3dvcmQtaXRlbSB7CiAgbWFyZ2luLXRvcDogMnJlbTsKfQouZm9vdGVyIHsKICB3aWR0aDogMTAwJTsKfQoKLml2dS1mb3JtIHsKICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["CreateNewEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CreateNewEvent.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <Row class=\"header\"><h1>Tazkara</h1></Row>\n    <Row class=\"bread-crumb\">\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <router-link to=\"/event-provider-control-panel\">\n            Control panel\n          </router-link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>Create new event</BreadcrumbItem>\n      </Breadcrumb>\n    </Row>\n    <Row class=\"title\"><h2>New Event</h2></Row>\n    <Row>\n      <Col span=\"12\" offset=\"6\">\n        <Alert show-icon>\n          Fill these information to host a new event. The Event will be\n          processed in 8 hours.\n        </Alert>\n        <Divider orientation=\"left\">Basic Info</Divider>\n        <Form\n          ref=\"newEventForm\"\n          :model=\"formData\"\n          :rules=\"formRules\"\n          :label-width=\"130\"\n        >\n          <Alert type=\"warning\">\n            These info are to find and recommend your event. fill them as\n            detailed as possible\n          </Alert>\n          <FormItem label=\"Title\" prop=\"title\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.title\"\n              placeholder=\"Enter the event title\"\n              class=\"input-feild\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Desc\" prop=\"desc\">\n            <Input\n              v-model=\"formData.desc\"\n              type=\"textarea\"\n              :autosize=\"{ minRows: 2, maxRows: 7 }\"\n              placeholder=\"Whate is the event about...\"\n              class=\"input-feild\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Location\" prop=\"location\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.location\"\n              placeholder=\"Enter a valid location\"\n              class=\"input-feild\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Date&Time\" prop=\"dateTime\">\n            <DatePicker\n              type=\"date\"\n              placeholder=\"Select date\"\n              v-model=\"formData.date\"\n            ></DatePicker>\n            <span style=\"margin: 0 1rem\">-</span>\n            <TimePicker\n              type=\"time\"\n              placeholder=\"Select time\"\n              v-model=\"formData.time\"\n            ></TimePicker>\n          </FormItem>\n          <Divider orientation=\"left\">Reservation</Divider>\n          <FormItem label=\"Avialable Tickets\" prop=\"avialableTickets\">\n            <Input\n              type=\"number\"\n              v-model=\"formData.allTickets\"\n              placeholder=\"Enter the number of avialable tickets\"\n              style=\"width: 45%\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"price of single ticket\" prop=\"price\">\n            <Input\n              type=\"number\"\n              v-model=\"formData.singleTicketPrice\"\n              placeholder=\"Enter the price of a single ticket\"\n              style=\"width: 45%\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Reservation duedate\" prop=\"dateTime\">\n            <DatePicker\n              type=\"date\"\n              placeholder=\"Select date\"\n              v-model=\"formData.lastReservationDate\"\n            ></DatePicker>\n            <span style=\"margin: 0 1rem\">-</span>\n            <TimePicker\n              type=\"time\"\n              placeholder=\"Select time\"\n              v-model=\"formData.lastReservationTime\"\n            ></TimePicker>\n          </FormItem>\n          <Divider orientation=\"left\">Classificatoin</Divider>\n          <FormItem label=\"Main category\" prop=\"mainCategory\">\n            <Select\n              placeholder=\"select\"\n              v-model=\"formData.mainCategory\"\n              @on-change=\"updateSubCategories\"\n            >\n              <Option\n                v-for=\"mainCategory in mainCategories\"\n                :key=\"mainCategory\"\n                :value=\"mainCategory\"\n              >\n                {{ mainCategory }}\n              </Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"Sub category\" prop=\"subCategory\">\n            <Select\n              placeholder=\"select\"\n              not-found-text=\"select main category first\"\n              v-model=\"formData.subCateogry\"\n            >\n              <Option\n                v-for=\"subCategory in subCategories\"\n                :key=\"subCategory\"\n                :value=\"subCategory\"\n              >\n                {{ subCategory }}\n              </Option>\n            </Select>\n          </FormItem>\n          <Divider orientation=\"left\">Participants</Divider>\n          <div v-show=\"solo\">\n            <Card :bordered=\"false\" style=\"width: 50%\">\n              <p slot=\"title\">Participant</p>\n              <FormItem label=\"name\" prop=\"price\">\n                <Input\n                  type=\"text\"\n                  v-model=\"formData.singleTicketPrice\"\n                  placeholder=\"Enter the price of a single ticket\"\n                ></Input>\n              </FormItem>\n              <FormItem label=\"role\" prop=\"price\">\n                <Input\n                  type=\"text\"\n                  v-model=\"formData.singleTicketPrice\"\n                  placeholder=\"Enter the price of a single ticket\"\n                ></Input>\n              </FormItem>\n            </Card>\n          </div>\n          <FormItem align=\"center\" class=\"footer\">\n            <Button type=\"primary\" @click=\"handleSubmit()\">Submit</Button>\n            <Button @click=\"handleReset()\" style=\"margin-left: 8px\"\n              >Reset</Button\n            >\n          </FormItem>\n        </Form>\n      </Col>\n    </Row>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src \"@/components/HelloWorld.vue\"\nimport axios from \"axios\";\n\nexport default {\n  name: \"JoinUs\",\n  components: {},\n  data() {\n    return {\n      mainCategories: [\"Entertainment\", \"Sports\", \"Education\"],\n      subCategories: [],\n      participants: [],\n      solo: true,\n      formData: {\n        title: \"\",\n        desc: \"\",\n        location: \"\",\n        date: \"\",\n        time: \"\",\n        allTickets: \"\",\n        singleTicketPrice: \"\",\n        lastReservationDate: \"\",\n        lastReservationTime: \"\",\n        mainCategory: \"\",\n        subCategory: \"\",\n      },\n      formRules: {\n        title: [\n          { required: true, message: \"Title cannot be empty\", trigger: \"blur\" },\n        ],\n        location: [\n          {\n            required: true,\n            message: \"location cannot be empty\",\n            trigger: \"blur\",\n          },\n        ],\n        desc: [\n          { required: true, message: \"Tell us who you are\", trigger: \"blur\" },\n          {\n            type: \"string\",\n            min: 50,\n            message: \"descriptoin cannot be less than 50 words\",\n            trigger: \"blur\",\n          },\n        ],\n        dateTime: [\n          {\n            required: true,\n            message: \"Nor date nor time can be empty\",\n            trigger: \"blur\",\n          },\n        ],\n        avialableTickets: [\n          {\n            required: true,\n            message: \"avialable tickets cannot be empty\",\n            trigger: \"blur\",\n          },\n        ],\n        price: [\n          {\n            required: true,\n            message: \"single ticket price cannot be empty\",\n            trigger: \"blur\",\n          },\n        ],\n        mainCategory: [\n          {\n            required: true,\n            message: \"main category cannot be empty\",\n            trigger: \"blur\",\n          },\n        ],\n        subCategory: [\n          {\n            required: true,\n            message: \"sub category cannot be empty\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.$refs[\"newEventForm\"].validate((valid) => {\n        if (valid) {\n          axios({\n            method: \"post\",\n            url: \"http://localhost:8888/api/v1/EventProviders/Register\",\n            data: this.createFormData(),\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          })\n            .then(() => {\n              this.handleReset();\n              this.showConfirmationMsg();\n            })\n            .catch((error) => console.log(error));\n        } else {\n          this.$Message.error(\"Please enter the information!\");\n        }\n      });\n    },\n    handleReset() {\n      this.$refs[\"newEventForm\"].resetFields();\n    },\n    showConfirmationMsg() {\n      this.$Message.success({\n        content:\n          \"Your request has been submitted Successfully..Kindly check your email\",\n        duration: 20,\n        closable: true,\n      });\n    },\n    updateSubCategories() {\n      if (this.formData.mainCategory == \"Entertainment\") {\n        this.subCategories = [\"Movies\", \"Theatre\", \"Concerts\", \"Standup show\"];\n      } else if (this.formData.mainCategory == \"Sports\") {\n        this.subCategories = [\"Football\", \"Tennis\", \"Basketball\", \"Volleyball\"];\n      } else if (this.formData.mainCategory == \"Education\") {\n        this.subCategories = [\"Conference\", \"Fair\"];\n      } else this.subCategories = [];\n    },\n    createFormData() {\n      const formData = new FormData();\n      formData.append(\"Name\", this.formData.name);\n      formData.append(\"Password\", this.formData.password);\n      formData.append(\"Email\", this.formData.email);\n      formData.append(\"Bio\", this.formData.desc);\n      formData.append(\"WebsiteLink\", this.formData.links.website);\n\n      var socialMedias = [\n        this.SocialMedia(\"facebook\", this.formData.links.facebook),\n        this.SocialMedia(\"instagram\", this.formData.links.instagram),\n        this.SocialMedia(\"youtube\", this.formData.links.youtube),\n        this.SocialMedia(\"twitter\", this.formData.links.twitter),\n      ];\n      formData.append(\"SocialMedias\", JSON.stringify(socialMedias));\n\n      return formData;\n    },\n    SocialMedia(type, link) {\n      return {\n        Type: type,\n        Link: link === \"\" ? null : link,\n      };\n    },\n    createParticipant(teamId) {\n      return {\n        team: teamId,\n        name: \"\",\n        role: \"\",\n      };\n    },\n  },\n};\n</script>\n\n<style >\n.header {\n  padding: 0.5rem 0rem;\n  text-align: center;\n  background-color: #161616;\n  color: white;\n}\n.bread-crumb {\n  margin: 0.5rem 1rem;\n}\n.title {\n  padding: 0.5rem 1rem;\n  font-size: large;\n  margin-bottom: 1rem;\n}\n.input-feild {\n  width: 100%;\n}\n.password-item {\n  margin-top: 2rem;\n}\n.footer {\n  width: 100%;\n}\n\n.ivu-form {\n  text-align: left !important;\n}\n</style>\n"]}]}