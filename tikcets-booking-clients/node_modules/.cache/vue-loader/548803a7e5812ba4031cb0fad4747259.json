{"remainingRequest":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&scoped=true&lang=css&","dependencies":[{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/src/views/Home.vue","mtime":1640135238822},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/Desktop/Tickets-Booking-Frontend/tikcets-booking-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oZWFkZXIgewogIHBhZGRpbmc6IDAuNXJlbSAwcmVtOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTYxNjE2OwogIGNvbG9yOiB3aGl0ZTsKfQouYnJlYWQtY3J1bWIgewogIG1hcmdpbjogMC41cmVtIDFyZW07Cn0KLnRpdGxlIHsKICBwYWRkaW5nOiAwLjVyZW0gMXJlbTsKICBmb250LXNpemU6IGxhcmdlOwogIG1hcmdpbi1ib3R0b206IDFyZW07Cn0KLmlucHV0LWZlaWxkIHsKICB3aWR0aDogMTAwJTsKfQoucGFzc3dvcmQtaXRlbSB7CiAgbWFyZ2luLXRvcDogMnJlbTsKfQouZm9vdGVyIHsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <Row class=\"header\"><h1>Tazkara</h1></Row>\n    <Row class=\"bread-crumb\">\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <router-link to=\"/\">Home</router-link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>Join us</BreadcrumbItem>\n      </Breadcrumb>\n    </Row>\n    <Row class=\"title\"><h2>Join us</h2></Row>\n    <Row>\n      <Col span=\"12\" offset=\"6\">\n        <Alert show-icon\n          >Fill these information to be a verified event provider. Your request\n          will be processed in 24 hours from the time of submission</Alert\n        >\n        <Divider orientation=\"left\">Authentication</Divider>\n        <Form\n          ref=\"registerForm\"\n          :model=\"formData\"\n          :rules=\"formRules\"\n          :label-width=\"130\"\n        >\n          <FormItem label=\"Email\" prop=\"email\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.email\"\n              placeholder=\"Enter a valid email address\"\n              class=\"input-feild\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Password\" prop=\"password\">\n            <Input\n              type=\"password\"\n              v-model=\"formData.password\"\n              placeholder=\"Enter a password\"\n              class=\"input-feild pass-input\"\n            ></Input>\n          </FormItem>\n          <div class=\"password-item\">\n            <FormItem label=\"Confrim password\" prop=\"confirmPassword\">\n              <Input\n                type=\"password\"\n                v-model=\"formData.reEnteredPassword\"\n                placeholder=\"Re enter the password\"\n                class=\"input-feild\"\n              ></Input>\n            </FormItem>\n          </div>\n          <Divider orientation=\"left\">Basic Info</Divider>\n          <FormItem label=\"Name\" prop=\"name\">\n            <Input\n              v-model=\"formData.name\"\n              placeholder=\"Enter your name or the name of your company/organisaion\"\n              class=\"input-feild\"\n            ></Input>\n          </FormItem>\n          <FormItem label=\"Desc\" prop=\"desc\">\n            <Input\n              v-model=\"formData.desc\"\n              type=\"textarea\"\n              :autosize=\"{ minRows: 2, maxRows: 7 }\"\n              placeholder=\"Enter something...\"\n              class=\"input-feild\"\n            ></Input>\n          </FormItem>\n          <Divider orientation=\"left\">Proof of Identity</Divider>\n          <Alert type=\"error\" v-show=\"showMissingLinkAlert\"\n            >Provide at least one link as a proof of identity</Alert\n          >\n          <FormItem label=\"Website\" prop=\"link\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.links.website\"\n              placeholder=\"Enter a link to an officila website\"\n              class=\"input-feild\"\n            >\n              <Icon type=\"md-planet\" slot=\"prepend\"></Icon>\n            </Input>\n          </FormItem>\n          <FormItem label=\"Facebook\" prop=\"link\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.links.facebook\"\n              placeholder=\"Enter a link to a Facebook page or account\"\n              class=\"input-feild\"\n            >\n              <Icon type=\"logo-facebook\" slot=\"prepend\"></Icon>\n            </Input>\n          </FormItem>\n          <FormItem label=\"Instgram\" prop=\"link\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.links.instagram\"\n              placeholder=\"Enter a link to an Instgram account\"\n              class=\"input-feild\"\n            >\n              <Icon type=\"logo-instagram\" slot=\"prepend\"></Icon>\n            </Input>\n          </FormItem>\n          <FormItem label=\"Youtube\" prop=\"link\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.links.youtube\"\n              placeholder=\"Enter a link to a Youtube channel\"\n              class=\"input-feild\"\n            >\n              <Icon type=\"logo-youtube\" slot=\"prepend\"></Icon>\n            </Input>\n          </FormItem>\n          <FormItem label=\"Twitter\" prop=\"link\">\n            <Input\n              type=\"text\"\n              v-model=\"formData.links.twitter\"\n              placeholder=\"Enter a link to a Twitter account\"\n              class=\"input-feild\"\n            >\n              <Icon type=\"logo-twitter\" slot=\"prepend\"></Icon>\n            </Input>\n          </FormItem>\n          <FormItem align=\"center\" class=\"footer\">\n            <Button type=\"primary\" @click=\"handleSubmit()\">Submit</Button>\n            <Button @click=\"handleReset()\" style=\"margin-left: 8px\"\n              >Reset</Button\n            >\n          </FormItem>\n        </Form>\n      </Col>\n    </Row>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src \"@/components/HelloWorld.vue\"\nimport axios from \"axios\";\n\nexport default {\n  name: \"Home\",\n  components: {},\n  data() {\n    const validateReEnteredPassword = (rule, value, callback) => {\n      if (this.formData.reEnteredPassword === \"\") {\n        callback(new Error(\"re enter the password again\"));\n      } else if (this.formData.reEnteredPassword !== this.formData.password) {\n        callback(new Error(\"The two input passwords do not match!\"));\n      } else {\n        callback();\n      }\n    };\n    const validateIndetity = (rule, value, callback) => {\n      this.showMissingLinkAlert = false;\n      if (this.formData.links.website !== \"\") callback();\n      else if (this.formData.links.facebook !== \"\") callback();\n      else if (this.formData.links.instagram !== \"\") callback();\n      else if (this.formData.links.youtube !== \"\") callback();\n      else if (this.formData.links.twitter !== \"\") callback();\n      else {\n        this.showMissingLinkAlert = true;\n        callback();\n      }\n    };\n    return {\n      showMissingLinkAlert: false,\n      formData: {\n        email: \"\",\n        password: \"\",\n        reEnteredPassword: \"\",\n        name: \"\",\n        desc: \"\",\n        links: {\n          website: \"\",\n          facebook: \"\",\n          instagram: \"\",\n          youtube: \"\",\n          twitter: \"\",\n        },\n      },\n      formRules: {\n        email: [\n          { required: true, message: \"email cannot be empty\", trigger: \"blur\" },\n          { type: \"email\", message: \"Incorrect email format\", trigger: \"blur\" },\n        ],\n        password: [\n          {\n            required: true,\n            message: \"Please fill in the password.\",\n            trigger: \"blur\",\n          },\n          {\n            type: \"string\",\n            pattern: new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{10,})\"),\n            message: `The password must contain at least one lower case alphabetical character \n                            and at least one upper case alphapetical character and at least one numeric \n                            character and be 10 characters or longer`,\n            trigger: \"blur\",\n          },\n        ],\n        confirmPassword: [\n          { validator: validateReEnteredPassword, trigger: \"blur\" },\n        ],\n        name: [\n          {\n            required: true,\n            message: \"The name cannot be empty\",\n            trigger: \"blur\",\n          },\n        ],\n        desc: [\n          { required: true, message: \"Tell us who you are\", trigger: \"blur\" },\n          {\n            type: \"string\",\n            min: 100,\n            message: \"descriptoin cannot be less than 100 words\",\n            trigger: \"blur\",\n          },\n        ],\n        link: [{ validator: validateIndetity, trigger: \"blur\" }],\n      },\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.$refs[\"registerForm\"].validate((valid) => {\n        if (valid) {\n          axios({\n            method: \"post\",\n            url: \"http://localhost:8888/api/\",\n            data: this.createFormData(),\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n          })\n            .then((response) => console.log(response))\n            .catch((error) => console.log(error));\n        } else {\n          this.$Message.error(\"Please enter the information!\");\n        }\n      });\n    },\n    handleReset() {\n      this.$refs[\"registerForm\"].resetFields();\n    },\n    createFormData() {\n      const formData = new FormData();\n      formData.append(\"Name\", this.formData.name);\n      formData.append(\"Password\", this.formData.password);\n      formData.append(\"Email\", this.formData.email);\n      formData.append(\"Bio\", this.formData.desc);\n      formData.append(\"WebsiteLink\", this.formData.links.website);\n\n      var socialMedias = [\n        this.SocialMedia(\"facebook\", this.formData.links.facebook),\n        this.SocialMedia(\"instagram\", this.formData.links.instagram),\n        this.SocialMedia(\"youtube\", this.formData.links.youtube),\n        this.SocialMedia(\"twitter\", this.formData.links.twitter),\n      ];\n      formData.append(\"SocialMedias\", JSON.stringify(socialMedias));\n\n      return formData;\n    },\n    SocialMedia(type, link) {\n      return {\n        Type: type,\n        Link: link === \"\" ? null : link,\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.header {\n  padding: 0.5rem 0rem;\n  text-align: center;\n  background-color: #161616;\n  color: white;\n}\n.bread-crumb {\n  margin: 0.5rem 1rem;\n}\n.title {\n  padding: 0.5rem 1rem;\n  font-size: large;\n  margin-bottom: 1rem;\n}\n.input-feild {\n  width: 100%;\n}\n.password-item {\n  margin-top: 2rem;\n}\n.footer {\n  width: 100%;\n}\n</style>\n"]}]}